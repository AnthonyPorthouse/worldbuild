/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WorldPagesIndexImport } from './routes/$world/pages/index'
import { Route as WorldPagesSlugImport } from './routes/$world/pages/$slug'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const WorldPagesIndexRoute = WorldPagesIndexImport.update({
  path: '/$world/pages/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/$world/pages/index.lazy').then((d) => d.Route),
)

const WorldPagesSlugRoute = WorldPagesSlugImport.update({
  path: '/$world/pages/$slug',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/$world/pages/$slug.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/$world/pages/$slug': {
      preLoaderRoute: typeof WorldPagesSlugImport
      parentRoute: typeof rootRoute
    }
    '/$world/pages/': {
      preLoaderRoute: typeof WorldPagesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  WorldPagesSlugRoute,
  WorldPagesIndexRoute,
])

/* prettier-ignore-end */
